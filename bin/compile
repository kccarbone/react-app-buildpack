#!/bin/sh

# Fail immediately on non-zero exit code
set -eu
unset GIT_DIR

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

# Directories
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
PACK_DIR=`cd $(dirname $0); cd ..; pwd`
TEMP_DIR=$(mktemp -t build_XXXXXX)
rm -rf $TEMP_DIR

# Set npm vars so that build tools are included
export NPM_CONFIG_PRODUCTION=false
export NODE_ENV=development
export NODE_PATH=$BUILD_DIR/.heroku/node/bin/
export PATH=$PATH:$BUILD_DIR/.heroku/node/bin/

echo " "
echo "===> Install Node.js buildpack"

# Download from git
git clone https://github.com/heroku/heroku-buildpack-nodejs.git $TEMP_DIR
cd $TEMP_DIR
chmod -f +x $TEMP_DIR/bin/{detect,compile,release} || true
echo " "

# Run buildpack
$TEMP_DIR/bin/compile $BUILD_DIR $CACHE_DIR $ENV_DIR

if [ $? != 0 ]; then
  echo "     Failed to install Node.js!"
  exit 1
fi

echo " "
echo "===> Run tests"
# TODO: run some tests :)
echo "     All tests passed"

echo " "
echo "===> Compile app 7"
cd $BUILD_DIR

# Build the react app
npm run build-prod

echo " "
echo "===> Compile public site"

# Delete everything except the "dist" folder
find . -type d -maxdepth 1 -not -path "./dist*" -not -name . -exec rm -Rf -- {} \;
find . -type f -maxdepth 1 -exec rm -Rf -- {} \;

# Move contents of the "dist" folder to the current directory
find . -type f -mindepth 2 -maxdepth 2 -exec mv -- {} . \;
find . -type d -mindepth 2 -maxdepth 2 -exec mv -- {} . \;
rmdir dist

# Install dependencies for public site
$TEMP_DIR/bin/compile $BUILD_DIR $CACHE_DIR $ENV_DIR

# Add a basic procfile to start the site
echo "web: npm start" >> Procfile

echo " "
echo "===> Done! Final manifest:"
echo " "
echo "$(find . -not -name .)"
echo " "

exit 0