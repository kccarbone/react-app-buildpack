#!/bin/sh

# Fail immediately on non-zero exit code
set -eu
unset GIT_DIR

# Set npm vars so that build tools are included
export NPM_CONFIG_PRODUCTION=false
export NODE_ENV=development

# Directories
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
PACK_DIR=`cd $(dirname $0); cd ..; pwd`
TEMP_DIR=$(mktemp -t build_XXXXXX)
rm -rf $TEMP_DIR

# Generic env variable function
export_env_dir() {
  local env_dir=$1
  local whitelist_regex=${2:-''}
  local blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH|IFS)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

echo " "
echo "===> Install Node.js buildpack"


echo " "
echo $(ls "$ENV_DIR")
echo " "

# Download from git
git clone https://github.com/heroku/heroku-buildpack-nodejs.git $TEMP_DIR
cd $TEMP_DIR
chmod -f +x $TEMP_DIR/bin/{detect,compile,release} || true
echo " "

# Run buildpack
$TEMP_DIR/bin/compile $BUILD_DIR $CACHE_DIR $ENV_DIR

if [ $? != 0 ]; then
  echo "     Failed to install Node.js!"
  exit 1
fi

echo " "
echo "===> Run tests"
# TODO: run some tests :)
echo "     All tests passed"

echo " "
echo "===> Compile app"
cd $BUILD_DIR
echo " "
echo $(ls -a)
echo " "
echo "DEBUG: "
echo $(ls .heroku/node)
echo " "
echo " "

# Make node variables available to build
export_env_dir "$ENV_DIR" '^(REACT_APP_|NODE_)'

export PATH="$HOME/.heroku/node/bin:$HOME/.heroku/yarn/bin:$PATH:$HOME/bin:$HOME/node_modules/.bin"
export NODE_HOME="$HOME/.heroku/node"


npm run build

exit 1